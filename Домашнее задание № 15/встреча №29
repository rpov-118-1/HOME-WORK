#include "pch.h"
#include "iostream"
#include "ctime"
#include "stdlib.h"
#include "stdlib.h"
#include "stdio.h"
#include "cstdio"
#include "cstring"
#include "cstdio"
#include "cstring"
#include "cstdlib"
#include "conio.h"
#include "ctype.h"
int choice = 0;
using namespace std;
const size_t N = 10;
typedef int T[N];
int Getchoice()
{
	
	cout << "\nselect the necessary action"
		<< "\n1. search for the minimum of two arrays"
		<< "\n2. Finding the minimum value of two arrays"
		<< "\n3. Calculate the average of both arrays"
		<< "\nEnter value.......";
	cin >> choice;
	return choice;
}

int max(int *arrA, int sA);//определение максимального элемента 
int min(int *arrA, int sA);//Определение минимального элемента
int avg(int *arrA, int sA);// определение среднего значения 
int(*Getptr())(int *arrA, int sA)//реализация выбора, определение указателя на нужную функцию
{
	int(*p)(int *arrA, int sA);
	switch (Getchoice())
	{
	case 1:
		p = &max;
		break;
	case 2:
		p = &min;
		break;
	case 3:
		p = &avg;
		break;
	default:
		p = &max;
	
	}
	
	return p;
}
void Action(int *arrA, int *arrB, int sA, int sB, int (*ptr)(int *arrA,int sA))
{


	int(*p)(int *arrA, int sA);
	switch (choice)
	{
	case 1:

		(*ptr)(arrA, sA) >= (*ptr)(arrB, sB) ? cout << "\nMAX ELEMENT=\t" << (*ptr)(arrA, sA) : cout << "\nMAX ELEMENT=\t" << (*ptr)(arrB, sB);
		break;
	case 2:

		(*ptr)(arrA, sA) <= (*ptr)(arrB, sB) ? cout << "\nMIX ELEMENT=\t" << (*ptr)(arrA, sA) : cout << "\nMIX ELEMENT=\t" << (*ptr)(arrB, sB);
		break;
	case 3:

		cout << "\n average value of the first array" << (*ptr)(arrA, sA) << endl;
		cout << "\n average value of the second array" << (*ptr)(arrB, sB) << endl;
		break;
	

	}
	
}
	 


int main()
{
	T A = {}; T B = {};
	//инициализация массивов А и Б
	for (int j = 0; j < N; j++)
	{
		A[j] = (int)((((float)rand() / (float)RAND_MAX) * 10) + 0);
		B[j] = (int)((((float)rand() / (float)RAND_MAX) * 10) + 0);
		cout << "\n" << A[j] <<"\t"<< B[j]<< endl;
	}
	//определение размера массива 
	int sizeA = sizeof(A) / sizeof(A[0]);
	int sizeB = sizeof(B) / sizeof(B[0]);
	//СОЗДАЕМ УКАЗАТЕЛИ И ИНИЦИАЛИЗИРУЕМ ИХ
	int *a = 0, *b = 0;
	//УКАЗЫВАЕМ НА ПЕРВЫЙ ЭЛЕМЕНТ МАССИВА
	a = A; b = B;
	int(*ptr)(int *, int );
	ptr = Getptr();
	Action(a, b, N, N, ptr);

	return 0;
}

int max(int *arrA, int sA) 
{
	int max = arrA[0]; 
	for (int i = 1; i < sA; i++)
	{
		if (arrA[i] > max) { max = arrA[i]; }
	}
	return max;
}
int min(int *arrA, int sA)
{
	int min = arrA[0]; 
	for (int i = 1; i < sA; i++)
	{
		if (arrA[i] < min) { min = arrA[i]; }
	}
	return min;
}
int avg(int *arrA, int sA)
{
	int avg = 0;

	for (int i = 0; i < sA; i++)
	{
		avg = avg + arrA[i];
	}
	avg = avg / sA;
	return avg;
}
